{"version":3,"sources":["Components/Card.js","Components/Transaction.js","Components/Pagination.js","Components/Navigation.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Card","className","this","props","person","FirstName","LastName","UserName","Gender","Email","DomainName","URL","MacAddress","LastLogin","CreditCardNumber","CreditCardType","PaymentMethod","Longitude","Latitude","Component","Transaction","details","map","x","index","key","Pagination","pageNumber","i","Math","ceil","totalPost","postPerPage","push","number","classname","href","onClick","changePage","Navigation","state","menuBar","nav","setState","id","name","value","handleFilter","Main","profile","isLoading","currentPage","search","axios","get","then","response","data","records","profiles","catch","error","console","log","inexOfLastPage","inexOfFirstPage","currentPost","slice","e","target","filter","to","activeClass","spy","smooth","duration","type","onChange","placeholder","length","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d2a520a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card_details_1\">\r\n          <i className=\"fa fa-user\"></i>\r\n          <h2>{this.props.person.FirstName}{\" \"}{this.props.person.LastName}</h2>\r\n        </div>\r\n        <div className=\"card_details_2\">\r\n          <p><strong>Username</strong> <span>{this.props.person.UserName}</span></p>\r\n          <p><strong>Gender</strong> <span>{this.props.person.Gender}</span></p>\r\n          <p><strong>Email</strong> <span>{this.props.person.Email}</span></p>\r\n          <p><strong>Domain name</strong> <span>{this.props.person.DomainName}</span></p>\r\n          <p><strong>Url</strong> <span>{this.props.person.URL}</span></p>\r\n\r\n          <p><strong>Mac address</strong> <span>{this.props.person.MacAddress}</span></p>\r\n          <p><strong>Last login </strong> <span>{this.props.person.LastLogin}</span></p>\r\n\r\n          <p><strong>Credit Card Number</strong> <span>{this.props.person.CreditCardNumber}</span></p>\r\n          <p><strong>Credit card type </strong> <span>{this.props.person.CreditCardType}</span></p>\r\n          <p><strong>Payment method</strong> <span>{this.props.person.PaymentMethod}</span></p>\r\n          <p><strong>Longitude </strong> <span>{this.props.person.Longitude}</span></p>\r\n          <p><strong>Latitude </strong> <span>{this.props.person.Latitude}</span></p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card ;\r\n","import React, { Component } from 'react';\r\nimport Card from \"./Card\"\r\n\r\nclass Transaction extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.details.map( (x, index)=>(\r\n          < Card  key={index} person={x} />\r\n        ))} \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Transaction ;\r\n","import React, {Component} from \"react\";\r\n\r\nclass Pagination extends Component{\r\n  render(){\r\n\r\n    const pageNumber = [];\r\n\r\n    for(let i=0; i <= Math.ceil(this.props.totalPost / this.props.postPerPage); i++){\r\n      pageNumber.push(i);\r\n    }\r\n    return(\r\n      <ul className=\"pagination\">\r\n        {pageNumber.map( (number)=>(\r\n        <li key={number} classname=\"page-item\">\r\n          <a href=\"!#\" classname=\"page-link\" onClick={() =>this.props.changePage(number)}>\r\n            {number}    \r\n          </a>\r\n        </li>  \r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pagination;","import React, { Component } from 'react'\r\n\r\n class Navigation extends Component {\r\n\r\n  state={\r\n    menuBar: false\r\n  }\r\n  render() {\r\n    const handleMenu = () =>{\r\n      this.setState({menuBar: !this.state.menuBar})\r\n     };\r\n\r\n    const nav = this.state.menuBar ? \"navclose\":\"nav\";\r\n  \r\n    return (\r\n        <nav>\r\n          <i className=\"fa fa-bars\"  onClick={handleMenu} id='menu'></i>\r\n          <ul className={nav}>\r\n          <li>\r\n            <span className=\"subnav_btn\">Filter by Gender</span>\r\n            <div className=\"sub_nav\">\r\n              <button name=\"Male\" value=\"Male\" onClick={this.props.handleFilter}>Male</button>\r\n              <button name=\"female\" value=\"Female\" onClick={this.props.handleFilter}>Female</button>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <span className=\"subnav_btn\">Filter by Payment</span>\r\n            <div className=\"sub_nav\">\r\n              <button name=\"PayPal\" value=\"PayPal\" onClick={this.props.handleFilter}>PayPal</button>\r\n              <button name=\"check\" value=\"Check\" onClick={this.props.handleFilter}>check</button>\r\n            </div>\r\n          </li>\r\n          </ul>\r\n        </nav>\r\n    )\r\n  }\r\n}\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport Transaction from \"./Transaction\";\r\nimport axios from \"axios\";\r\nimport Pagination from './Pagination';\r\nimport Navigation from './Navigation';\r\nimport { Link } from \"react-scroll\";\r\n\r\n class Main extends Component {\r\n  state = {\r\n    profile : [],\r\n    isLoading: false,\r\n    currentPage: 1,\r\n    postPerPage: 20,\r\n    search:\"\"\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get(\"https://api.enye.tech/v1/challenge/records\")\r\n    .then( (response)=>{\r\n      this.setState({isLoading: true})\r\n      this.setState({profile: response.data.records.profiles})\r\n    })\r\n    .catch(error => console.log(\"errorrr\"));\r\n  }\r\n\r\n  render() {  \r\n\r\n    let inexOfLastPage = this.state.currentPage * this.state.postPerPage ;\r\n    let inexOfFirstPage = inexOfLastPage - this.state.postPerPage ;\r\n    let currentPost = this.state.profile.slice(inexOfFirstPage, inexOfLastPage)\r\n\r\n    const changePage = (number)=>{\r\n      this.setState({currentPage:number})\r\n    }\r\n\r\n    const handleFilter = (e)=>{\r\n      if(e.target.value === \"Male\"){\r\n        this.setState({profile:this.state.profile.filter( person=>person.Gender === e.target.value )})\r\n      }else if(e.target.value === \"Female\"){\r\n        this.setState({profile:this.state.profile.filter( person=>person.Gender === e.target.value )})\r\n      }\r\n      else if(e.target.value === \"Check\"){\r\n        this.setState({profile:this.state.profile.filter( person=>person.Gender === e.target.value )})\r\n      }else if(e.target.value === \"PayPal\"){\r\n        this.setState({profile:this.state.profile.filter( person=>person.Gender === e.target.value )})\r\n      }\r\n    }\r\n\r\n\r\n      const handleChange = (e)=>{\r\n        this.setState({search:e.target.value})\r\n        this.setState({profile:this.state.profile.filter( person=>person.FirstName === e.target.value )})\r\n     }\r\n  \r\n\r\n    if(!this.state.isLoading){\r\n    return <h1 className=\"text-center\">Loading..</h1>\r\n    }else{\r\n      return(\r\n        <div className=\"main\" id=\"top\">\r\n        <h2 className=\"topText\">E-commerce Transaction Details</h2>\r\n        <Navigation  handleFilter={handleFilter}/>\r\n        <Link to=\"footer\"  \r\n          activeClass=\"active\"\r\n          spy={true}\r\n          smooth={true}\r\n          duration={500}>\r\n         <i className=\"fas fa-angle-double-down\"></i>\r\n        </Link>\r\n        <input type=\"text\" value={this.state.search} onChange={handleChange} placeholder=\"Search patient ...\"/>\r\n        < Transaction details={currentPost} />\r\n        < Pagination totalPost={this.state.profile.length} postPerPage={this.state.postPerPage} changePage={changePage}/>\r\n        <div>\r\n          <Link to=\"top\" \r\n            activeClass=\"active\"\r\n            spy={true}\r\n            smooth={true}\r\n            duration={500}>\r\n          <i className=\"fas fa-angle-double-up\"></i>\r\n          </Link>\r\n          <div id=\"footer\"> copyright &copy; Mohammed kabir 2020</div>\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default Main\r\n","import React from 'react';\nimport Main from \"./Components/Main\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}